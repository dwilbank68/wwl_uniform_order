{"version":3,"sources":["actions/index.js","actions/types.js","components/Payments.jsx","components/Header.jsx","components/Landing.jsx","components/App.jsx","reducers/index.js","reducers/authReducer.js","index.js"],"names":["fetchUser","dispatch","getState","a","axios","get","user","type","payload","data","handleToken","token","post","res","Payments","amount","name","description","props","stripeKey","process","className","Component","connect","actions","ownProps","auth","to","style","paddingLeft","href","key","margin","credits","renderContent","Landing","textAlign","useEffect","exact","path","component","combineReducers","state","action","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","getElementById"],"mappings":"kXAGaA,EAAY,yDAAM,WAAOC,EAAUC,GAAjB,eAAAC,EAAA,sEACRC,IAAMC,IAAI,qBADF,OACrBC,EADqB,OAE3BL,EAAS,CAACM,KCLY,aDKKC,QAASF,EAAKG,OAFd,2CAAN,yDAKZC,EAAc,SAAAC,GAAK,8CAAI,WAAOV,EAAUC,GAAjB,eAAAC,EAAA,sEACdC,IAAMQ,KAAK,cAAeD,GADZ,OAC1BE,EAD0B,OAEhCZ,EAAS,CAAEM,KCVW,aDUOC,QAASK,EAAIJ,OAFV,2CAAJ,yD,yDEH1BK,E,iLAEQ,IAAD,OACL,OACI,kBAAC,IAAD,CAAgBC,OAAQ,IACRC,KAAK,SACLC,YAAY,yBACZN,MAAO,SAAAA,GAAK,OAAI,EAAKO,MAAMR,YAAYC,IACvCQ,UAAWC,oCACvB,4BAAQC,UAAU,OAAlB,oB,GATOC,aAiBRC,cAAQ,KAAMC,EAAdD,CAAuBT,GCuBvBS,eAJS,SAAC,EAAQE,GAAT,MAAuB,CAC3CC,KADoB,EAAEA,QAIXH,EAvCA,SAAC,GAAY,IAAXG,EAAU,EAAVA,KAmBb,OACI,6BACI,yBAAKL,UAAU,eACX,kBAAC,IAAD,CAAQM,GAAID,EAAO,WAAa,IACxBL,UAAU,kBACVO,MAAO,CAACC,YAAY,SAF5B,QAKA,wBAAIR,UAAU,SAxBJ,WAClB,GAAa,OAATK,EACJ,OAAa,IAATA,EACA,4BACI,uBAAGI,KAAK,gBAAR,uBAGD,CACH,wBAAIC,IAAI,KAAI,kBAAC,EAAD,OACZ,wBAAIA,IAAI,IAAIH,MAAO,CAACI,OAAQ,WAA5B,YACcN,EAAKO,SAEnB,wBAAIF,IAAI,KAAI,uBAAGD,KAAK,eAAR,aAaHI,SCINC,EA9BC,WAGZ,OACI,yBAAQP,MAAO,CAACQ,UAAW,WACvB,sCADJ,qCCkBOb,kBAAQ,KAAMC,EAAdD,EApBf,YAA2B,IAAbvB,EAAY,EAAZA,UAMV,OALHqC,qBACO,WAAOrC,MACP,IAIA,yBAAKqB,UAAU,aACX,kBAAC,IAAD,KACI,6BACI,kBAAC,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOiB,OAAK,EAACC,KAAK,IAAIC,UAAWL,WCnB1CM,G,MAAAA,YAAgB,CAC3Bf,KCCW,WAAkC,IAAjCgB,EAAgC,uDAF5B,KAEiBC,EAAW,uCAE5C,OAAOA,EAAOpC,MACV,INRkB,aMQD,OAAOoC,EAAOnC,UAAW,EAE1C,QAAS,OAAOkC,OCClBE,EAAQC,YACVC,EACA,GACAC,YAAgBC,MAGpBC,IAASC,OACL,kBAAC,IAAD,CAAUN,MAAOA,GACb,kBAAC,EAAD,OAEJO,SAASC,eAAe,W","file":"static/js/main.6a6a7a2f.chunk.js","sourcesContent":["import axios from 'axios';\nimport {FETCH_USER} from './types.js';\n\nexport const fetchUser = () => async (dispatch, getState) => {\n    const user = await axios.get('/api/current_user');\n    dispatch({type:FETCH_USER, payload: user.data})\n}\n\nexport const handleToken = token => async (dispatch, getState) => {\n    const res = await axios.post('/api/stripe', token);\n    dispatch({ type: FETCH_USER, payload: res.data });\n}","export const FETCH_USER = 'FETCH_USER';","import React, { Component } from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\t\t\t\t\t\t\t// 1\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/index.js';\n\nclass Payments extends Component {\n\n    render() {\n        return (\n            <StripeCheckout amount={500}\n                            name=\"Emaily\"\n                            description=\"$5 for 5 email credits\"\n                            token={token => this.props.handleToken(token)}\n                            stripeKey={process.env.REACT_APP_STRIPE_KEY} >\n                <button className=\"btn\">\n                    Add Credits\n                </button>\n            </StripeCheckout>\n        );\n    }\n}\n\nexport default connect(null, actions)(Payments);","import React from 'react';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\n\nimport Payments from './Payments.jsx';\n// const Header = (props) => {\nconst Header = ({auth}) => {\n\n\n    const renderContent = () => {\n        if (auth === null) return;\n        if (auth === false) return (\n            <li>\n                <a href=\"/auth/google\">Log In With Google</a>\n            </li>\n        );\n        return [\n            <li key=\"1\"><Payments/></li>,\n            <li key=\"2\" style={{margin: '0 10px'}}>\n                Credits: {auth.credits}\n            </li>,\n            <li key=\"3\"><a href=\"/api/logout\">Log Out</a></li>\n        ];\n    }\n\n    return (\n        <nav>\n            <div className=\"nav-wrapper\">\n                <Link   to={auth ? '/surveys' : '/'}\n                        className=\"left brand-logo\"\n                        style={{paddingLeft:'15px'}}>\n                    Logo                \n                </Link>\n                <ul className=\"right\">\n                    {renderContent()}\n                </ul>\n            </div>\n        </nav>\n    );\n};\n\nconst mapStateToProps = ({auth}, ownProps) => ({\n    auth\n});\n\nexport default connect(mapStateToProps)(Header);","import React from 'react';\n// import React, {useState, useEffect} from 'react';\n// import PropTypes from 'prop-types';\n// import Foo from './images/foo.png';\n\n\n// import $COMPONENT$ from './$COMPONENT$.jsx';\n// const $COMPONENT$ = (props) => {\nconst Landing = () => {\n\n\n    return (\n        <div    style={{textAlign: 'center'}}>\n            <h1>Emaily</h1>\n            Collect feedback from your users\n        </div>\n    );\n};\n\n\n// $COMPONENT$.defaultProps = {};\n// $COMPONENT$.propTypes = {\n//     name:        PropTypes.string.isRequired,\n//     hndleIptChg: PropTypes.func,\n//     id:          PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]).isRequired,\n//     message:     PropTypes.shape({\n//          title: PropTypes.string.isRequired,\n//          text: PropTypes.string.isRequired\n//     }).isRequired,\n//     comments:    PropTypes.arrayOf(PropTypes.object),\n//     todos:       PropTypes.array,\n//     isComplete:  PropTypes.bool,\n//     id:          PropTypes.number,\n//     date:        PropTypes.instanceOf(Date)\n// };\n//\n// PropTypes -> array, bool, func, number, object, string, symbol\n\nexport default Landing;\n\n\n///////////////////////////////////// BACKGROUND IMAGE /////////////////////////////////////\n\n// import Foo from './images/foo.png';\n\n// style={{background:`white url(${Foo})`}}\n\n\n///////////////////////////////////// REACT-REVEAL EFFECT /////////////////////////////////////\n\n// import Fade from 'react-reveal/Fade.js';\n// import Slide from 'react-reveal/Slide.js';\n// import Zoom from 'react-reveal/Zoom.js';\n\n// <Fade delay={500}>...</Fade>\n// <Slide left delay={1000}>...</Slide\n// <Zoom delay={foo.delay}>...</Zoom>","import React, {useEffect} from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport * as actions from '../actions/index.js';\n\nimport Header from './Header.jsx';                                              \nimport Landing from './Landing.jsx';                                              \n// import logo from './logo.svg';\n// import './App.css';\n\nfunction App({fetchUser}) {\n\tuseEffect(\n        () => {fetchUser()},\n        []\n    )\t\n\n    return (\n        <div className=\"container\">\n            <BrowserRouter>\n                <div>\n                    <Header/>\n                    <Switch>\n                        <Route exact path=\"/\" component={Landing} />\n                    </Switch>\n                </div>\n            </BrowserRouter>  \n        </div>\n    );\n}\n\nexport default connect(null, actions)(App);","import {combineReducers} from 'redux';\nimport authReducer from './authReducer';\n\nexport default combineReducers({\n    auth: authReducer\n})","import _ from 'lodash';\nimport {FETCH_USER} from '../actions/types.js';\n\t\nlet INITIAL_STATE = null;\n\t\nexport default (state=INITIAL_STATE, action) => {\n\n    switch(action.type){\n        case FETCH_USER: return action.payload || false;\n        // payload is either user obj or ''. We want false instead.\n        default: return state;\n    };\n};\n\t\n\n\t\n\t\n////////// paste this in index.js - $REDUCER$ //////////////\n\t\n// import $REDUCER_NAME$ from './$FILENAME$';\n\t\n// $STATE_PIECE$: $REDUCER_NAME$\n\t\n//////////// paste this in test ///////////////\n\t\n// var expect = require(\"expect\");\n// var df = require('deep-freeze-strict');\n\t\n// var reducers = require(\"reducers\");\n\t\n// describe('$REDUCER_NAME$', () => {\n//    it('should ', () => {\n//        var action = {\n//            type: DO_IT\n//        }\n//        var res = reducers.$REDUCER_NAME$(df(), df(action));\n//        expect(res).toEqual();\n//    });\n// });\n\t\n\t\n// to return an object when action.payload is an array,\n// return _.mapKeys(action.payload.data, 'id');","import 'materialize-css/dist/css/materialize.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware} from 'redux';\nimport reduxThunk from 'redux-thunk';\n\n\nimport App from './components/App.jsx';\nimport reducers from './reducers/index.js'\n\nconst store = createStore(\n    reducers,\n    {},\n    applyMiddleware(reduxThunk)\n)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n );\n"],"sourceRoot":""}